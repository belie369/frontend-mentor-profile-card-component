*,:after,:before{box-sizing:border-box;margin:0;padding:0}html{font-size:62.5%;scroll-behavior:smooth}body{min-height:100vh;background-color:#19a2ae;background-image:url(../../dist/img/bg-pattern-top.svg),url(../../dist/img/bg-pattern-bottom.svg);background-repeat:no-repeat,no-repeat;background-position:right 38vw bottom 49vh,left 30vw top 49vh;font-family:Kumbh Sans,sans-serif;font-size:1.8rem;font-weight:400}h1,h2,h3,h4,h5,h6,p{overflow-wrap:break-word}img{display:block;max-width:100%;max-height:100%}button{font:inherit;border:none;text-decoration:none;cursor:pointer;outline:none}ul{list-style:none}.visually-hidden:not(:focus):not(:active){position:absolute;width:1px;height:1px;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);white-space:nowrap;overflow:hidden}.footer{color:#969696}.user{min-width:32.6rem;min-height:37.4rem;background-color:#fff;text-align:center;border-radius:1.4rem;overflow:hidden}.user__header{background-image:url(../../dist/img/bg-pattern-card.svg);min-height:14.7rem}.user__img,.user__photo{display:block}.user__img{margin:-48px auto 0;border:.4rem solid #fff;border-radius:50%}.user__info{margin:1.5rem}.user__stats{display:flex;justify-content:space-evenly;margin-bottom:1.5rem;padding-top:2.1rem;border-top:1px solid hsla(0,0%,59%,.3)}.user__stats-num{color:#2d3248;font-weight:700}.user__stats-type{color:#6a6f81;font-size:1rem;letter-spacing:.2rem}.user__stats-detials{display:flex;flex-direction:column;gap:.5rem}.container{display:flex;align-items:center;justify-content:center;min-height:100vh}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
